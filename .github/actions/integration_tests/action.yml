name: Run integration tests
description: Deploy infrastructure, test it, and destroy it
inputs:
  role_to_assume:
    description: AWS Role to assume
    required: true
  boundary_policy:
    description: IAM managed policy to apply as permissions boundary
    required: true
  env_suffix:
    description: Environment suffix
    required: true
runs:
  using: "composite"
  steps:
    - run: echo "Assuming AWS Role"
      shell: bash
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: ${{ inputs.role_to_assume }}
        role-session-name: gitlfss3-gha
    - run: echo "Installing node modules"
      shell: bash
    - name: Install modules
      run: npm ci
      shell: bash
    - run: echo "Restricting roles to IAM boundary"
      shell: bash
    - name: Updating serverless config with boundary policy
      run: "echo \"    AuthorizerIamRoleLambdaExecution:\n      Type: AWS::IAM::Role\n      Properties:\n        PermissionsBoundary: ${{ inputs.boundary_policy }}\n    BatchIamRoleLambdaExecution:\n      Type: AWS::IAM::Role\n      Properties:\n        PermissionsBoundary: ${{ inputs.boundary_policy }}\n    IamRoleLambdaExecution:\n      Type: AWS::IAM::Role\n      Properties:\n        PermissionsBoundary: ${{ inputs.boundary_policy }}\n    LocksIamRoleLambdaExecution:\n      Type: AWS::IAM::Role\n      Properties:\n        PermissionsBoundary: ${{ inputs.boundary_policy }}\" >> serverless.yml"
      shell: bash
    - run: echo "Removing deletion policies from config"
      shell: bash
    - name: Removing deletion policies from config
      run: "sed -i '/DeletionPolicy: Retain/d' serverless.yml"
      shell: bash
    - run: echo "Running tests"
      shell: bash
    - name: Running tests
      run: ENV_SUFFIX=${{ inputs.env_suffix }} npm run integration
      shell: bash
